paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      tags: [Users]
      security:
        - cookieAuth: []
      responses:
        200:
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        401:
          $ref: '#/components/responses/Error'

    post:
      summary: Crear nuevo usuario
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: "********"
              required:
                - first_name
                - last_name
                - email
                - password
      responses:
        200:
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User created
        400:
          $ref: '#/components/responses/Error'

  /api/users/{uid}:
    get:
      summary: Obtener usuario por ID
      tags: [Users]
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        200:
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/responses/Error'

    put:
      summary: Actualizar usuario
      tags: [Users]
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/Error'

    delete:
      summary: Eliminar usuario
      tags: [Users]
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/Success'
        404:
          $ref: '#/components/responses/Error' 